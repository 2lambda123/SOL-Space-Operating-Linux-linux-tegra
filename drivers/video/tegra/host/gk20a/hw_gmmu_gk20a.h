/*
 * drivers/video/tegra/host/gk20a/hw_gmmu_gk20a.h
 *
 * Copyright (c) 2012, NVIDIA Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

 /*
  * Function naming determines intended use:
  *
  *     <x>_r(void) : Returns the offset for register <x>.
  *
  *     <x>_w(void) : Returns the word offset for word (4 byte) element <x>.
  *
  *     <x>_<y>_s(void) : Returns size of field <y> of register <x> in bits.
  *
  *     <x>_<y>_f(u32 v) : Returns a value based on 'v' which has been shifted
  *         and masked to place it at field <y> of register <x>.  This value
  *         can be |'d with others to produce a full register value for
  *         register <x>.
  *
  *     <x>_<y>_m(void) : Returns a mask for field <y> of register <x>.  This
  *         value can be ~'d and then &'d to clear the value of field <y> for
  *         register <x>.
  *
  *     <x>_<y>_<z>_f(void) : Returns the constant value <z> after being shifted
  *         to place it at field <y> of register <x>.  This value can be |'d
  *         with others to produce a full register value for <x>.
  *
  *     <x>_<y>_v(u32 r) : Returns the value of field <y> from a full register
  *         <x> value 'r' after being shifted to place its LSB at bit 0.
  *         This value is suitable for direct comparison with other unshifted
  *         values appropriate for use in field <y> of register <x>.
  *
  *     <x>_<y>_<z>_v(void) : Returns the constant value for <z> defined for
  *         field <y> of register <x>.  This value is suitable for direct
  *         comparison with unshifted values appropriate for use in field <y>
  *         of register <x>.
  */

#ifndef __hw_gmmu_gk20a_h__
#define __hw_gmmu_gk20a_h__
/*This file is autogenerated.  Do not edit. */

static inline u32 gmmu_pde_aperture_big_w(void)
{
	return 0;
}
static inline u32 gmmu_pde_aperture_big_s(void)
{
	return 2;
}
static inline u32 gmmu_pde_aperture_big_f(u32 v)
{
	return (v & 0x3) << 0;
}
static inline u32 gmmu_pde_aperture_big_m(void)
{
	return 0x3 << 0;
}
static inline u32 gmmu_pde_aperture_big_v(u32 r)
{
	return (r >> 0) & 0x3;
}
static inline u32 gmmu_pde_aperture_big_invalid_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_aperture_big_invalid_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_aperture_big_video_memory_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pde_aperture_big_video_memory_f(void)
{
	return 0x1;
}
static inline u32 gmmu_pde_aperture_big_system_coherent_memory_v(void)
{
	return 0x00000002;
}
static inline u32 gmmu_pde_aperture_big_system_coherent_memory_f(void)
{
	return 0x2;
}
static inline u32 gmmu_pde_aperture_big_system_non_coherent_memory_v(void)
{
	return 0x00000003;
}
static inline u32 gmmu_pde_aperture_big_system_non_coherent_memory_f(void)
{
	return 0x3;
}
static inline u32 gmmu_pde_size_w(void)
{
	return 0;
}
static inline u32 gmmu_pde_size_s(void)
{
	return 2;
}
static inline u32 gmmu_pde_size_f(u32 v)
{
	return (v & 0x3) << 2;
}
static inline u32 gmmu_pde_size_m(void)
{
	return 0x3 << 2;
}
static inline u32 gmmu_pde_size_v(u32 r)
{
	return (r >> 2) & 0x3;
}
static inline u32 gmmu_pde_size_full_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_size_full_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_size_half_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pde_size_half_f(void)
{
	return 0x4;
}
static inline u32 gmmu_pde_size_quarter_v(void)
{
	return 0x00000002;
}
static inline u32 gmmu_pde_size_quarter_f(void)
{
	return 0x8;
}
static inline u32 gmmu_pde_size_eighth_v(void)
{
	return 0x00000003;
}
static inline u32 gmmu_pde_size_eighth_f(void)
{
	return 0xc;
}
static inline u32 gmmu_pde_address_big_sys_w(void)
{
	return 0;
}
static inline u32 gmmu_pde_address_big_sys_s(void)
{
	return 28;
}
static inline u32 gmmu_pde_address_big_sys_f(u32 v)
{
	return (v & 0xfffffff) << 4;
}
static inline u32 gmmu_pde_address_big_sys_m(void)
{
	return 0xfffffff << 4;
}
static inline u32 gmmu_pde_address_big_sys_v(u32 r)
{
	return (r >> 4) & 0xfffffff;
}
static inline u32 gmmu_pde_address_big_vid_w(void)
{
	return 0;
}
static inline u32 gmmu_pde_address_big_vid_s(void)
{
	return 25;
}
static inline u32 gmmu_pde_address_big_vid_f(u32 v)
{
	return (v & 0x1ffffff) << 4;
}
static inline u32 gmmu_pde_address_big_vid_m(void)
{
	return 0x1ffffff << 4;
}
static inline u32 gmmu_pde_address_big_vid_v(u32 r)
{
	return (r >> 4) & 0x1ffffff;
}
static inline u32 gmmu_pde_address_big_vid_peer_w(void)
{
	return 0;
}
static inline u32 gmmu_pde_address_big_vid_peer_s(void)
{
	return 3;
}
static inline u32 gmmu_pde_address_big_vid_peer_f(u32 v)
{
	return (v & 0x7) << 29;
}
static inline u32 gmmu_pde_address_big_vid_peer_m(void)
{
	return 0x7 << 29;
}
static inline u32 gmmu_pde_address_big_vid_peer_v(u32 r)
{
	return (r >> 29) & 0x7;
}
static inline u32 gmmu_pde_address_big_vid_peer_0_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_address_big_vid_peer_0_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_aperture_small_w(void)
{
	return 1;
}
static inline u32 gmmu_pde_aperture_small_s(void)
{
	return 2;
}
static inline u32 gmmu_pde_aperture_small_f(u32 v)
{
	return (v & 0x3) << 0;
}
static inline u32 gmmu_pde_aperture_small_m(void)
{
	return 0x3 << 0;
}
static inline u32 gmmu_pde_aperture_small_v(u32 r)
{
	return (r >> 0) & 0x3;
}
static inline u32 gmmu_pde_aperture_small_invalid_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_aperture_small_invalid_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_aperture_small_video_memory_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pde_aperture_small_video_memory_f(void)
{
	return 0x1;
}
static inline u32 gmmu_pde_aperture_small_system_coherent_memory_v(void)
{
	return 0x00000002;
}
static inline u32 gmmu_pde_aperture_small_system_coherent_memory_f(void)
{
	return 0x2;
}
static inline u32 gmmu_pde_aperture_small_system_non_coherent_memory_v(void)
{
	return 0x00000003;
}
static inline u32 gmmu_pde_aperture_small_system_non_coherent_memory_f(void)
{
	return 0x3;
}
static inline u32 gmmu_pde_vol_small_w(void)
{
	return 1;
}
static inline u32 gmmu_pde_vol_small_s(void)
{
	return 1;
}
static inline u32 gmmu_pde_vol_small_f(u32 v)
{
	return (v & 0x1) << 2;
}
static inline u32 gmmu_pde_vol_small_m(void)
{
	return 0x1 << 2;
}
static inline u32 gmmu_pde_vol_small_v(u32 r)
{
	return (r >> 2) & 0x1;
}
static inline u32 gmmu_pde_vol_small_true_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pde_vol_small_true_f(void)
{
	return 0x4;
}
static inline u32 gmmu_pde_vol_small_false_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_vol_small_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_vol_big_w(void)
{
	return 1;
}
static inline u32 gmmu_pde_vol_big_s(void)
{
	return 1;
}
static inline u32 gmmu_pde_vol_big_f(u32 v)
{
	return (v & 0x1) << 3;
}
static inline u32 gmmu_pde_vol_big_m(void)
{
	return 0x1 << 3;
}
static inline u32 gmmu_pde_vol_big_v(u32 r)
{
	return (r >> 3) & 0x1;
}
static inline u32 gmmu_pde_vol_big_true_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pde_vol_big_true_f(void)
{
	return 0x8;
}
static inline u32 gmmu_pde_vol_big_false_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_vol_big_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_address_small_sys_w(void)
{
	return 1;
}
static inline u32 gmmu_pde_address_small_sys_s(void)
{
	return 28;
}
static inline u32 gmmu_pde_address_small_sys_f(u32 v)
{
	return (v & 0xfffffff) << 4;
}
static inline u32 gmmu_pde_address_small_sys_m(void)
{
	return 0xfffffff << 4;
}
static inline u32 gmmu_pde_address_small_sys_v(u32 r)
{
	return (r >> 4) & 0xfffffff;
}
static inline u32 gmmu_pde_address_small_vid_w(void)
{
	return 1;
}
static inline u32 gmmu_pde_address_small_vid_s(void)
{
	return 25;
}
static inline u32 gmmu_pde_address_small_vid_f(u32 v)
{
	return (v & 0x1ffffff) << 4;
}
static inline u32 gmmu_pde_address_small_vid_m(void)
{
	return 0x1ffffff << 4;
}
static inline u32 gmmu_pde_address_small_vid_v(u32 r)
{
	return (r >> 4) & 0x1ffffff;
}
static inline u32 gmmu_pde_address_small_vid_peer_w(void)
{
	return 1;
}
static inline u32 gmmu_pde_address_small_vid_peer_s(void)
{
	return 3;
}
static inline u32 gmmu_pde_address_small_vid_peer_f(u32 v)
{
	return (v & 0x7) << 29;
}
static inline u32 gmmu_pde_address_small_vid_peer_m(void)
{
	return 0x7 << 29;
}
static inline u32 gmmu_pde_address_small_vid_peer_v(u32 r)
{
	return (r >> 29) & 0x7;
}
static inline u32 gmmu_pde_address_small_vid_peer_0_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pde_address_small_vid_peer_0_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pde_address_shift_v(void)
{
	return 0x0000000c;
}
static inline u32 gmmu_pde__size_v(void)
{
	return 8;
}
static inline u32 gmmu_pte_valid_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_valid_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_valid_f(u32 v)
{
	return (v & 0x1) << 0;
}
static inline u32 gmmu_pte_valid_m(void)
{
	return 0x1 << 0;
}
static inline u32 gmmu_pte_valid_v(u32 r)
{
	return (r >> 0) & 0x1;
}
static inline u32 gmmu_pte_valid_true_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_valid_true_f(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_valid_false_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_valid_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_privilege_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_privilege_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_privilege_f(u32 v)
{
	return (v & 0x1) << 1;
}
static inline u32 gmmu_pte_privilege_m(void)
{
	return 0x1 << 1;
}
static inline u32 gmmu_pte_privilege_v(u32 r)
{
	return (r >> 1) & 0x1;
}
static inline u32 gmmu_pte_privilege_true_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_privilege_true_f(void)
{
	return 0x2;
}
static inline u32 gmmu_pte_privilege_false_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_privilege_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_read_only_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_read_only_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_read_only_f(u32 v)
{
	return (v & 0x1) << 2;
}
static inline u32 gmmu_pte_read_only_m(void)
{
	return 0x1 << 2;
}
static inline u32 gmmu_pte_read_only_v(u32 r)
{
	return (r >> 2) & 0x1;
}
static inline u32 gmmu_pte_read_only_true_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_read_only_true_f(void)
{
	return 0x4;
}
static inline u32 gmmu_pte_read_only_false_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_read_only_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_encrypted_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_encrypted_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_encrypted_f(u32 v)
{
	return (v & 0x1) << 3;
}
static inline u32 gmmu_pte_encrypted_m(void)
{
	return 0x1 << 3;
}
static inline u32 gmmu_pte_encrypted_v(u32 r)
{
	return (r >> 3) & 0x1;
}
static inline u32 gmmu_pte_encrypted_true_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pte_encrypted_true_f(void)
{
	return 0x8;
}
static inline u32 gmmu_pte_encrypted_false_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pte_encrypted_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_address_sys_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_address_sys_s(void)
{
	return 28;
}
static inline u32 gmmu_pte_address_sys_f(u32 v)
{
	return (v & 0xfffffff) << 4;
}
static inline u32 gmmu_pte_address_sys_m(void)
{
	return 0xfffffff << 4;
}
static inline u32 gmmu_pte_address_sys_v(u32 r)
{
	return (r >> 4) & 0xfffffff;
}
static inline u32 gmmu_pte_address_vid_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_address_vid_s(void)
{
	return 25;
}
static inline u32 gmmu_pte_address_vid_f(u32 v)
{
	return (v & 0x1ffffff) << 4;
}
static inline u32 gmmu_pte_address_vid_m(void)
{
	return 0x1ffffff << 4;
}
static inline u32 gmmu_pte_address_vid_v(u32 r)
{
	return (r >> 4) & 0x1ffffff;
}
static inline u32 gmmu_pte_address_vid_peer_w(void)
{
	return 0;
}
static inline u32 gmmu_pte_address_vid_peer_s(void)
{
	return 3;
}
static inline u32 gmmu_pte_address_vid_peer_f(u32 v)
{
	return (v & 0x7) << 29;
}
static inline u32 gmmu_pte_address_vid_peer_m(void)
{
	return 0x7 << 29;
}
static inline u32 gmmu_pte_address_vid_peer_v(u32 r)
{
	return (r >> 29) & 0x7;
}
static inline u32 gmmu_pte_address_vid_peer_0_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pte_address_vid_peer_0_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_address_vid_peer_1_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pte_address_vid_peer_1_f(void)
{
	return 0x20000000;
}
static inline u32 gmmu_pte_address_vid_peer_2_v(void)
{
	return 0x00000002;
}
static inline u32 gmmu_pte_address_vid_peer_2_f(void)
{
	return 0x40000000;
}
static inline u32 gmmu_pte_address_vid_peer_3_v(void)
{
	return 0x00000003;
}
static inline u32 gmmu_pte_address_vid_peer_3_f(void)
{
	return 0x60000000;
}
static inline u32 gmmu_pte_address_vid_peer_4_v(void)
{
	return 0x00000004;
}
static inline u32 gmmu_pte_address_vid_peer_4_f(void)
{
	return 0x80000000;
}
static inline u32 gmmu_pte_address_vid_peer_5_v(void)
{
	return 0x00000005;
}
static inline u32 gmmu_pte_address_vid_peer_5_f(void)
{
	return 0xa0000000;
}
static inline u32 gmmu_pte_address_vid_peer_6_v(void)
{
	return 0x00000006;
}
static inline u32 gmmu_pte_address_vid_peer_6_f(void)
{
	return 0xc0000000;
}
static inline u32 gmmu_pte_address_vid_peer_7_v(void)
{
	return 0x00000007;
}
static inline u32 gmmu_pte_address_vid_peer_7_f(void)
{
	return 0xe0000000;
}
static inline u32 gmmu_pte_vol_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_vol_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_vol_f(u32 v)
{
	return (v & 0x1) << 0;
}
static inline u32 gmmu_pte_vol_m(void)
{
	return 0x1 << 0;
}
static inline u32 gmmu_pte_vol_v(u32 r)
{
	return (r >> 0) & 0x1;
}
static inline u32 gmmu_pte_vol_true_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pte_vol_true_f(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_vol_false_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pte_vol_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_aperture_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_aperture_s(void)
{
	return 2;
}
static inline u32 gmmu_pte_aperture_f(u32 v)
{
	return (v & 0x3) << 1;
}
static inline u32 gmmu_pte_aperture_m(void)
{
	return 0x3 << 1;
}
static inline u32 gmmu_pte_aperture_v(u32 r)
{
	return (r >> 1) & 0x3;
}
static inline u32 gmmu_pte_aperture_video_memory_v(void)
{
	return 0x00000000;
}
static inline u32 gmmu_pte_aperture_video_memory_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_aperture_peer_memory_v(void)
{
	return 0x00000001;
}
static inline u32 gmmu_pte_aperture_peer_memory_f(void)
{
	return 0x2;
}
static inline u32 gmmu_pte_aperture_system_coherent_memory_v(void)
{
	return 0x00000002;
}
static inline u32 gmmu_pte_aperture_system_coherent_memory_f(void)
{
	return 0x4;
}
static inline u32 gmmu_pte_aperture_system_non_coherent_memory_v(void)
{
	return 0x00000003;
}
static inline u32 gmmu_pte_aperture_system_non_coherent_memory_f(void)
{
	return 0x6;
}
static inline u32 gmmu_pte_lock_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_lock_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_lock_f(u32 v)
{
	return (v & 0x1) << 3;
}
static inline u32 gmmu_pte_lock_m(void)
{
	return 0x1 << 3;
}
static inline u32 gmmu_pte_lock_v(u32 r)
{
	return (r >> 3) & 0x1;
}
static inline u32 gmmu_pte_lock_true_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_lock_true_f(void)
{
	return 0x8;
}
static inline u32 gmmu_pte_lock_false_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_lock_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_comptagline_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_comptagline_s(void)
{
	return 17;
}
static inline u32 gmmu_pte_comptagline_f(u32 v)
{
	return (v & 0x1ffff) << 12;
}
static inline u32 gmmu_pte_comptagline_m(void)
{
	return 0x1ffff << 12;
}
static inline u32 gmmu_pte_comptagline_v(u32 r)
{
	return (r >> 12) & 0x1ffff;
}
static inline u32 gmmu_pte_read_disable_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_read_disable_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_read_disable_f(u32 v)
{
	return (v & 0x1) << 30;
}
static inline u32 gmmu_pte_read_disable_m(void)
{
	return 0x1 << 30;
}
static inline u32 gmmu_pte_read_disable_v(u32 r)
{
	return (r >> 30) & 0x1;
}
static inline u32 gmmu_pte_read_disable_true_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_read_disable_true_f(void)
{
	return 0x40000000;
}
static inline u32 gmmu_pte_read_disable_false_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_read_disable_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_write_disable_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_write_disable_s(void)
{
	return 1;
}
static inline u32 gmmu_pte_write_disable_f(u32 v)
{
	return (v & 0x1) << 31;
}
static inline u32 gmmu_pte_write_disable_m(void)
{
	return 0x1 << 31;
}
static inline u32 gmmu_pte_write_disable_v(u32 r)
{
	return (r >> 31) & 0x1;
}
static inline u32 gmmu_pte_write_disable_true_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_write_disable_true_f(void)
{
	return 0x80000000;
}
static inline u32 gmmu_pte_write_disable_false_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_write_disable_false_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_address_shift_v(void)
{
	return 0x0000000c;
}
static inline u32 gmmu_pte__size_v(void)
{
	return 8;
}
static inline u32 gmmu_pte_comptags_none_v(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_comptags_1_v(void)
{
	return 0x1;
}
static inline u32 gmmu_pte_comptags_2_v(void)
{
	return 0x2;
}
static inline u32 gmmu_pte_kind_w(void)
{
	return 1;
}
static inline u32 gmmu_pte_kind_s(void)
{
	return 8;
}
static inline u32 gmmu_pte_kind_f(u32 v)
{
	return (v & 0xff) << 4;
}
static inline u32 gmmu_pte_kind_m(void)
{
	return 0xff << 4;
}
static inline u32 gmmu_pte_kind_v(u32 r)
{
	return (r >> 4) & 0xff;
}
static inline u32 gmmu_pte_kind_invalid_v(void)
{
	return 0xff;
}
static inline u32 gmmu_pte_kind_invalid_f(void)
{
	return 0xff0;
}
static inline u32 gmmu_pte_kind_pitch_v(void)
{
	return 0x00;
}
static inline u32 gmmu_pte_kind_pitch_f(void)
{
	return 0x0;
}
static inline u32 gmmu_pte_kind_z16_v(void)
{
	return 0x01;
}
static inline u32 gmmu_pte_kind_z16_f(void)
{
	return 0x10;
}
static inline u32 gmmu_pte_kind_z16_2c_v(void)
{
	return 0x02;
}
static inline u32 gmmu_pte_kind_z16_2c_f(void)
{
	return 0x20;
}
static inline u32 gmmu_pte_kind_z16_ms2_2c_v(void)
{
	return 0x03;
}
static inline u32 gmmu_pte_kind_z16_ms2_2c_f(void)
{
	return 0x30;
}
static inline u32 gmmu_pte_kind_z16_ms4_2c_v(void)
{
	return 0x04;
}
static inline u32 gmmu_pte_kind_z16_ms4_2c_f(void)
{
	return 0x40;
}
static inline u32 gmmu_pte_kind_z16_ms8_2c_v(void)
{
	return 0x05;
}
static inline u32 gmmu_pte_kind_z16_ms8_2c_f(void)
{
	return 0x50;
}
static inline u32 gmmu_pte_kind_z16_ms16_2c_v(void)
{
	return 0x06;
}
static inline u32 gmmu_pte_kind_z16_ms16_2c_f(void)
{
	return 0x60;
}
static inline u32 gmmu_pte_kind_z16_2z_v(void)
{
	return 0x07;
}
static inline u32 gmmu_pte_kind_z16_2z_f(void)
{
	return 0x70;
}
static inline u32 gmmu_pte_kind_z16_ms2_2z_v(void)
{
	return 0x08;
}
static inline u32 gmmu_pte_kind_z16_ms2_2z_f(void)
{
	return 0x80;
}
static inline u32 gmmu_pte_kind_z16_ms4_2z_v(void)
{
	return 0x09;
}
static inline u32 gmmu_pte_kind_z16_ms4_2z_f(void)
{
	return 0x90;
}
static inline u32 gmmu_pte_kind_z16_ms8_2z_v(void)
{
	return 0x0a;
}
static inline u32 gmmu_pte_kind_z16_ms8_2z_f(void)
{
	return 0xa0;
}
static inline u32 gmmu_pte_kind_z16_ms16_2z_v(void)
{
	return 0x0b;
}
static inline u32 gmmu_pte_kind_z16_ms16_2z_f(void)
{
	return 0xb0;
}
static inline u32 gmmu_pte_kind_z16_4cz_v(void)
{
	return 0x0c;
}
static inline u32 gmmu_pte_kind_z16_4cz_f(void)
{
	return 0xc0;
}
static inline u32 gmmu_pte_kind_z16_ms2_4cz_v(void)
{
	return 0x0d;
}
static inline u32 gmmu_pte_kind_z16_ms2_4cz_f(void)
{
	return 0xd0;
}
static inline u32 gmmu_pte_kind_z16_ms4_4cz_v(void)
{
	return 0x0e;
}
static inline u32 gmmu_pte_kind_z16_ms4_4cz_f(void)
{
	return 0xe0;
}
static inline u32 gmmu_pte_kind_z16_ms8_4cz_v(void)
{
	return 0x0f;
}
static inline u32 gmmu_pte_kind_z16_ms8_4cz_f(void)
{
	return 0xf0;
}
static inline u32 gmmu_pte_kind_z16_ms16_4cz_v(void)
{
	return 0x10;
}
static inline u32 gmmu_pte_kind_z16_ms16_4cz_f(void)
{
	return 0x100;
}
static inline u32 gmmu_pte_kind_s8z24_v(void)
{
	return 0x11;
}
static inline u32 gmmu_pte_kind_s8z24_f(void)
{
	return 0x110;
}
static inline u32 gmmu_pte_kind_s8z24_1z_v(void)
{
	return 0x12;
}
static inline u32 gmmu_pte_kind_s8z24_1z_f(void)
{
	return 0x120;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_1z_v(void)
{
	return 0x13;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_1z_f(void)
{
	return 0x130;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_1z_v(void)
{
	return 0x14;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_1z_f(void)
{
	return 0x140;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_1z_v(void)
{
	return 0x15;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_1z_f(void)
{
	return 0x150;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_1z_v(void)
{
	return 0x16;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_1z_f(void)
{
	return 0x160;
}
static inline u32 gmmu_pte_kind_s8z24_2cz_v(void)
{
	return 0x17;
}
static inline u32 gmmu_pte_kind_s8z24_2cz_f(void)
{
	return 0x170;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_2cz_v(void)
{
	return 0x18;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_2cz_f(void)
{
	return 0x180;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_2cz_v(void)
{
	return 0x19;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_2cz_f(void)
{
	return 0x190;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_2cz_v(void)
{
	return 0x1a;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_2cz_f(void)
{
	return 0x1a0;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_2cz_v(void)
{
	return 0x1b;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_2cz_f(void)
{
	return 0x1b0;
}
static inline u32 gmmu_pte_kind_s8z24_2cs_v(void)
{
	return 0x1c;
}
static inline u32 gmmu_pte_kind_s8z24_2cs_f(void)
{
	return 0x1c0;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_2cs_v(void)
{
	return 0x1d;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_2cs_f(void)
{
	return 0x1d0;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_2cs_v(void)
{
	return 0x1e;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_2cs_f(void)
{
	return 0x1e0;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_2cs_v(void)
{
	return 0x1f;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_2cs_f(void)
{
	return 0x1f0;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_2cs_v(void)
{
	return 0x20;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_2cs_f(void)
{
	return 0x200;
}
static inline u32 gmmu_pte_kind_s8z24_4cszv_v(void)
{
	return 0x21;
}
static inline u32 gmmu_pte_kind_s8z24_4cszv_f(void)
{
	return 0x210;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_4cszv_v(void)
{
	return 0x22;
}
static inline u32 gmmu_pte_kind_s8z24_ms2_4cszv_f(void)
{
	return 0x220;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_4cszv_v(void)
{
	return 0x23;
}
static inline u32 gmmu_pte_kind_s8z24_ms4_4cszv_f(void)
{
	return 0x230;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_4cszv_v(void)
{
	return 0x24;
}
static inline u32 gmmu_pte_kind_s8z24_ms8_4cszv_f(void)
{
	return 0x240;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_4cszv_v(void)
{
	return 0x25;
}
static inline u32 gmmu_pte_kind_s8z24_ms16_4cszv_f(void)
{
	return 0x250;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_v(void)
{
	return 0x26;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_f(void)
{
	return 0x260;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_v(void)
{
	return 0x27;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_f(void)
{
	return 0x270;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_v(void)
{
	return 0x28;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_f(void)
{
	return 0x280;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_v(void)
{
	return 0x29;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_f(void)
{
	return 0x290;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_1zv_v(void)
{
	return 0x2e;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_1zv_f(void)
{
	return 0x2e0;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_1zv_v(void)
{
	return 0x2f;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_1zv_f(void)
{
	return 0x2f0;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_1zv_v(void)
{
	return 0x30;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_1zv_f(void)
{
	return 0x300;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_1zv_v(void)
{
	return 0x31;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_1zv_f(void)
{
	return 0x310;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_2cs_v(void)
{
	return 0x32;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_2cs_f(void)
{
	return 0x320;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_2cs_v(void)
{
	return 0x33;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_2cs_f(void)
{
	return 0x330;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_2cs_v(void)
{
	return 0x34;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_2cs_f(void)
{
	return 0x340;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_2cs_v(void)
{
	return 0x35;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_2cs_f(void)
{
	return 0x350;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_2czv_v(void)
{
	return 0x3a;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_2czv_f(void)
{
	return 0x3a0;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_2czv_v(void)
{
	return 0x3b;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_2czv_f(void)
{
	return 0x3b0;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_2czv_v(void)
{
	return 0x3c;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_2czv_f(void)
{
	return 0x3c0;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_2czv_v(void)
{
	return 0x3d;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_2czv_f(void)
{
	return 0x3d0;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_2zv_v(void)
{
	return 0x3e;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_2zv_f(void)
{
	return 0x3e0;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_2zv_v(void)
{
	return 0x3f;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_2zv_f(void)
{
	return 0x3f0;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_2zv_v(void)
{
	return 0x40;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_2zv_f(void)
{
	return 0x400;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_2zv_v(void)
{
	return 0x41;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_2zv_f(void)
{
	return 0x410;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_4cszv_v(void)
{
	return 0x42;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc12_4cszv_f(void)
{
	return 0x420;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_4cszv_v(void)
{
	return 0x43;
}
static inline u32 gmmu_pte_kind_v8z24_ms4_vc4_4cszv_f(void)
{
	return 0x430;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_4cszv_v(void)
{
	return 0x44;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc8_4cszv_f(void)
{
	return 0x440;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_4cszv_v(void)
{
	return 0x45;
}
static inline u32 gmmu_pte_kind_v8z24_ms8_vc24_4cszv_f(void)
{
	return 0x450;
}
static inline u32 gmmu_pte_kind_z24s8_v(void)
{
	return 0x46;
}
static inline u32 gmmu_pte_kind_z24s8_f(void)
{
	return 0x460;
}
static inline u32 gmmu_pte_kind_z24s8_1z_v(void)
{
	return 0x47;
}
static inline u32 gmmu_pte_kind_z24s8_1z_f(void)
{
	return 0x470;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_1z_v(void)
{
	return 0x48;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_1z_f(void)
{
	return 0x480;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_1z_v(void)
{
	return 0x49;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_1z_f(void)
{
	return 0x490;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_1z_v(void)
{
	return 0x4a;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_1z_f(void)
{
	return 0x4a0;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_1z_v(void)
{
	return 0x4b;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_1z_f(void)
{
	return 0x4b0;
}
static inline u32 gmmu_pte_kind_z24s8_2cs_v(void)
{
	return 0x4c;
}
static inline u32 gmmu_pte_kind_z24s8_2cs_f(void)
{
	return 0x4c0;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_2cs_v(void)
{
	return 0x4d;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_2cs_f(void)
{
	return 0x4d0;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_2cs_v(void)
{
	return 0x4e;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_2cs_f(void)
{
	return 0x4e0;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_2cs_v(void)
{
	return 0x4f;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_2cs_f(void)
{
	return 0x4f0;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_2cs_v(void)
{
	return 0x50;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_2cs_f(void)
{
	return 0x500;
}
static inline u32 gmmu_pte_kind_z24s8_2cz_v(void)
{
	return 0x51;
}
static inline u32 gmmu_pte_kind_z24s8_2cz_f(void)
{
	return 0x510;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_2cz_v(void)
{
	return 0x52;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_2cz_f(void)
{
	return 0x520;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_2cz_v(void)
{
	return 0x53;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_2cz_f(void)
{
	return 0x530;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_2cz_v(void)
{
	return 0x54;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_2cz_f(void)
{
	return 0x540;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_2cz_v(void)
{
	return 0x55;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_2cz_f(void)
{
	return 0x550;
}
static inline u32 gmmu_pte_kind_z24s8_4cszv_v(void)
{
	return 0x56;
}
static inline u32 gmmu_pte_kind_z24s8_4cszv_f(void)
{
	return 0x560;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_4cszv_v(void)
{
	return 0x57;
}
static inline u32 gmmu_pte_kind_z24s8_ms2_4cszv_f(void)
{
	return 0x570;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_4cszv_v(void)
{
	return 0x58;
}
static inline u32 gmmu_pte_kind_z24s8_ms4_4cszv_f(void)
{
	return 0x580;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_4cszv_v(void)
{
	return 0x59;
}
static inline u32 gmmu_pte_kind_z24s8_ms8_4cszv_f(void)
{
	return 0x590;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_4cszv_v(void)
{
	return 0x5a;
}
static inline u32 gmmu_pte_kind_z24s8_ms16_4cszv_f(void)
{
	return 0x5a0;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_v(void)
{
	return 0x5b;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_f(void)
{
	return 0x5b0;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_v(void)
{
	return 0x5c;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_f(void)
{
	return 0x5c0;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_v(void)
{
	return 0x5d;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_f(void)
{
	return 0x5d0;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_v(void)
{
	return 0x5e;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_f(void)
{
	return 0x5e0;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_1zv_v(void)
{
	return 0x63;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_1zv_f(void)
{
	return 0x630;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_1zv_v(void)
{
	return 0x64;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_1zv_f(void)
{
	return 0x640;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_1zv_v(void)
{
	return 0x65;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_1zv_f(void)
{
	return 0x650;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_1zv_v(void)
{
	return 0x66;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_1zv_f(void)
{
	return 0x660;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_2cs_v(void)
{
	return 0x67;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_2cs_f(void)
{
	return 0x670;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_2cs_v(void)
{
	return 0x68;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_2cs_f(void)
{
	return 0x680;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_2cs_v(void)
{
	return 0x69;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_2cs_f(void)
{
	return 0x690;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_2cs_v(void)
{
	return 0x6a;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_2cs_f(void)
{
	return 0x6a0;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_2czv_v(void)
{
	return 0x6f;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_2czv_f(void)
{
	return 0x6f0;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_2czv_v(void)
{
	return 0x70;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_2czv_f(void)
{
	return 0x700;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_2czv_v(void)
{
	return 0x71;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_2czv_f(void)
{
	return 0x710;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_2czv_v(void)
{
	return 0x72;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_2czv_f(void)
{
	return 0x720;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_2zv_v(void)
{
	return 0x73;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_2zv_f(void)
{
	return 0x730;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_2zv_v(void)
{
	return 0x74;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_2zv_f(void)
{
	return 0x740;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_2zv_v(void)
{
	return 0x75;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_2zv_f(void)
{
	return 0x750;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_2zv_v(void)
{
	return 0x76;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_2zv_f(void)
{
	return 0x760;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_4cszv_v(void)
{
	return 0x77;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc12_4cszv_f(void)
{
	return 0x770;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_4cszv_v(void)
{
	return 0x78;
}
static inline u32 gmmu_pte_kind_z24v8_ms4_vc4_4cszv_f(void)
{
	return 0x780;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_4cszv_v(void)
{
	return 0x79;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc8_4cszv_f(void)
{
	return 0x790;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_4cszv_v(void)
{
	return 0x7a;
}
static inline u32 gmmu_pte_kind_z24v8_ms8_vc24_4cszv_f(void)
{
	return 0x7a0;
}
static inline u32 gmmu_pte_kind_zf32_v(void)
{
	return 0x7b;
}
static inline u32 gmmu_pte_kind_zf32_f(void)
{
	return 0x7b0;
}
static inline u32 gmmu_pte_kind_zf32_1z_v(void)
{
	return 0x7c;
}
static inline u32 gmmu_pte_kind_zf32_1z_f(void)
{
	return 0x7c0;
}
static inline u32 gmmu_pte_kind_zf32_ms2_1z_v(void)
{
	return 0x7d;
}
static inline u32 gmmu_pte_kind_zf32_ms2_1z_f(void)
{
	return 0x7d0;
}
static inline u32 gmmu_pte_kind_zf32_ms4_1z_v(void)
{
	return 0x7e;
}
static inline u32 gmmu_pte_kind_zf32_ms4_1z_f(void)
{
	return 0x7e0;
}
static inline u32 gmmu_pte_kind_zf32_ms8_1z_v(void)
{
	return 0x7f;
}
static inline u32 gmmu_pte_kind_zf32_ms8_1z_f(void)
{
	return 0x7f0;
}
static inline u32 gmmu_pte_kind_zf32_ms16_1z_v(void)
{
	return 0x80;
}
static inline u32 gmmu_pte_kind_zf32_ms16_1z_f(void)
{
	return 0x800;
}
static inline u32 gmmu_pte_kind_zf32_2cs_v(void)
{
	return 0x81;
}
static inline u32 gmmu_pte_kind_zf32_2cs_f(void)
{
	return 0x810;
}
static inline u32 gmmu_pte_kind_zf32_ms2_2cs_v(void)
{
	return 0x82;
}
static inline u32 gmmu_pte_kind_zf32_ms2_2cs_f(void)
{
	return 0x820;
}
static inline u32 gmmu_pte_kind_zf32_ms4_2cs_v(void)
{
	return 0x83;
}
static inline u32 gmmu_pte_kind_zf32_ms4_2cs_f(void)
{
	return 0x830;
}
static inline u32 gmmu_pte_kind_zf32_ms8_2cs_v(void)
{
	return 0x84;
}
static inline u32 gmmu_pte_kind_zf32_ms8_2cs_f(void)
{
	return 0x840;
}
static inline u32 gmmu_pte_kind_zf32_ms16_2cs_v(void)
{
	return 0x85;
}
static inline u32 gmmu_pte_kind_zf32_ms16_2cs_f(void)
{
	return 0x850;
}
static inline u32 gmmu_pte_kind_zf32_2cz_v(void)
{
	return 0x86;
}
static inline u32 gmmu_pte_kind_zf32_2cz_f(void)
{
	return 0x860;
}
static inline u32 gmmu_pte_kind_zf32_ms2_2cz_v(void)
{
	return 0x87;
}
static inline u32 gmmu_pte_kind_zf32_ms2_2cz_f(void)
{
	return 0x870;
}
static inline u32 gmmu_pte_kind_zf32_ms4_2cz_v(void)
{
	return 0x88;
}
static inline u32 gmmu_pte_kind_zf32_ms4_2cz_f(void)
{
	return 0x880;
}
static inline u32 gmmu_pte_kind_zf32_ms8_2cz_v(void)
{
	return 0x89;
}
static inline u32 gmmu_pte_kind_zf32_ms8_2cz_f(void)
{
	return 0x890;
}
static inline u32 gmmu_pte_kind_zf32_ms16_2cz_v(void)
{
	return 0x8a;
}
static inline u32 gmmu_pte_kind_zf32_ms16_2cz_f(void)
{
	return 0x8a0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_v(void)
{
	return 0x8b;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_f(void)
{
	return 0x8b0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_v(void)
{
	return 0x8c;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_f(void)
{
	return 0x8c0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_v(void)
{
	return 0x8d;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_f(void)
{
	return 0x8d0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_v(void)
{
	return 0x8e;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_f(void)
{
	return 0x8e0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_1cs_v(void)
{
	return 0x8f;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_1cs_f(void)
{
	return 0x8f0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_1cs_v(void)
{
	return 0x90;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_1cs_f(void)
{
	return 0x900;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_1cs_v(void)
{
	return 0x91;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_1cs_f(void)
{
	return 0x910;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_1cs_v(void)
{
	return 0x92;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_1cs_f(void)
{
	return 0x920;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_1zv_v(void)
{
	return 0x97;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_1zv_f(void)
{
	return 0x970;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_1zv_v(void)
{
	return 0x98;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_1zv_f(void)
{
	return 0x980;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_1zv_v(void)
{
	return 0x99;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_1zv_f(void)
{
	return 0x990;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_1zv_v(void)
{
	return 0x9a;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_1zv_f(void)
{
	return 0x9a0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_1czv_v(void)
{
	return 0x9b;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_1czv_f(void)
{
	return 0x9b0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_1czv_v(void)
{
	return 0x9c;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_1czv_f(void)
{
	return 0x9c0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_1czv_v(void)
{
	return 0x9d;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_1czv_f(void)
{
	return 0x9d0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_1czv_v(void)
{
	return 0x9e;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_1czv_f(void)
{
	return 0x9e0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_2cs_v(void)
{
	return 0x9f;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_2cs_f(void)
{
	return 0x9f0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_2cs_v(void)
{
	return 0xa0;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_2cs_f(void)
{
	return 0xa00;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_2cs_v(void)
{
	return 0xa1;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_2cs_f(void)
{
	return 0xa10;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_2cs_v(void)
{
	return 0xa2;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_2cs_f(void)
{
	return 0xa20;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_2cszv_v(void)
{
	return 0xa3;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc12_2cszv_f(void)
{
	return 0xa30;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_2cszv_v(void)
{
	return 0xa4;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms4_vc4_2cszv_f(void)
{
	return 0xa40;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_2cszv_v(void)
{
	return 0xa5;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc8_2cszv_f(void)
{
	return 0xa50;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_2cszv_v(void)
{
	return 0xa6;
}
static inline u32 gmmu_pte_kind_x8z24_x16v8s8_ms8_vc24_2cszv_f(void)
{
	return 0xa60;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_v(void)
{
	return 0xa7;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_f(void)
{
	return 0xa70;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_v(void)
{
	return 0xa8;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_f(void)
{
	return 0xa80;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_v(void)
{
	return 0xa9;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_f(void)
{
	return 0xa90;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_v(void)
{
	return 0xaa;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_f(void)
{
	return 0xaa0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_1cs_v(void)
{
	return 0xab;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_1cs_f(void)
{
	return 0xab0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_1cs_v(void)
{
	return 0xac;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_1cs_f(void)
{
	return 0xac0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_1cs_v(void)
{
	return 0xad;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_1cs_f(void)
{
	return 0xad0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_1cs_v(void)
{
	return 0xae;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_1cs_f(void)
{
	return 0xae0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_1zv_v(void)
{
	return 0xb3;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_1zv_f(void)
{
	return 0xb30;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_1zv_v(void)
{
	return 0xb4;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_1zv_f(void)
{
	return 0xb40;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_1zv_v(void)
{
	return 0xb5;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_1zv_f(void)
{
	return 0xb50;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_1zv_v(void)
{
	return 0xb6;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_1zv_f(void)
{
	return 0xb60;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_1czv_v(void)
{
	return 0xb7;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_1czv_f(void)
{
	return 0xb70;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_1czv_v(void)
{
	return 0xb8;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_1czv_f(void)
{
	return 0xb80;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_1czv_v(void)
{
	return 0xb9;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_1czv_f(void)
{
	return 0xb90;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_1czv_v(void)
{
	return 0xba;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_1czv_f(void)
{
	return 0xba0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_2cs_v(void)
{
	return 0xbb;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_2cs_f(void)
{
	return 0xbb0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_2cs_v(void)
{
	return 0xbc;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_2cs_f(void)
{
	return 0xbc0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_2cs_v(void)
{
	return 0xbd;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_2cs_f(void)
{
	return 0xbd0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_2cs_v(void)
{
	return 0xbe;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_2cs_f(void)
{
	return 0xbe0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_2cszv_v(void)
{
	return 0xbf;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc12_2cszv_f(void)
{
	return 0xbf0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_2cszv_v(void)
{
	return 0xc0;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms4_vc4_2cszv_f(void)
{
	return 0xc00;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_2cszv_v(void)
{
	return 0xc1;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc8_2cszv_f(void)
{
	return 0xc10;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_2cszv_v(void)
{
	return 0xc2;
}
static inline u32 gmmu_pte_kind_zf32_x16v8s8_ms8_vc24_2cszv_f(void)
{
	return 0xc20;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_v(void)
{
	return 0xc3;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_f(void)
{
	return 0xc30;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_1cs_v(void)
{
	return 0xc4;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_1cs_f(void)
{
	return 0xc40;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms2_1cs_v(void)
{
	return 0xc5;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms2_1cs_f(void)
{
	return 0xc50;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms4_1cs_v(void)
{
	return 0xc6;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms4_1cs_f(void)
{
	return 0xc60;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms8_1cs_v(void)
{
	return 0xc7;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms8_1cs_f(void)
{
	return 0xc70;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms16_1cs_v(void)
{
	return 0xc8;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms16_1cs_f(void)
{
	return 0xc80;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_2cszv_v(void)
{
	return 0xce;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_2cszv_f(void)
{
	return 0xce0;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms2_2cszv_v(void)
{
	return 0xcf;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms2_2cszv_f(void)
{
	return 0xcf0;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms4_2cszv_v(void)
{
	return 0xd0;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms4_2cszv_f(void)
{
	return 0xd00;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms8_2cszv_v(void)
{
	return 0xd1;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms8_2cszv_f(void)
{
	return 0xd10;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms16_2cszv_v(void)
{
	return 0xd2;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms16_2cszv_f(void)
{
	return 0xd20;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_2cs_v(void)
{
	return 0xd3;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_2cs_f(void)
{
	return 0xd30;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms2_2cs_v(void)
{
	return 0xd4;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms2_2cs_f(void)
{
	return 0xd40;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms4_2cs_v(void)
{
	return 0xd5;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms4_2cs_f(void)
{
	return 0xd50;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms8_2cs_v(void)
{
	return 0xd6;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms8_2cs_f(void)
{
	return 0xd60;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms16_2cs_v(void)
{
	return 0xd7;
}
static inline u32 gmmu_pte_kind_zf32_x24s8_ms16_2cs_f(void)
{
	return 0xd70;
}
static inline u32 gmmu_pte_kind_generic_16bx2_v(void)
{
	return 0xfe;
}
static inline u32 gmmu_pte_kind_generic_16bx2_f(void)
{
	return 0xfe0;
}
static inline u32 gmmu_pte_kind_c32_2c_v(void)
{
	return 0xd8;
}
static inline u32 gmmu_pte_kind_c32_2c_f(void)
{
	return 0xd80;
}
static inline u32 gmmu_pte_kind_c32_2cbr_v(void)
{
	return 0xd9;
}
static inline u32 gmmu_pte_kind_c32_2cbr_f(void)
{
	return 0xd90;
}
static inline u32 gmmu_pte_kind_c32_2cba_v(void)
{
	return 0xda;
}
static inline u32 gmmu_pte_kind_c32_2cba_f(void)
{
	return 0xda0;
}
static inline u32 gmmu_pte_kind_c32_2cra_v(void)
{
	return 0xdb;
}
static inline u32 gmmu_pte_kind_c32_2cra_f(void)
{
	return 0xdb0;
}
static inline u32 gmmu_pte_kind_c32_2bra_v(void)
{
	return 0xdc;
}
static inline u32 gmmu_pte_kind_c32_2bra_f(void)
{
	return 0xdc0;
}
static inline u32 gmmu_pte_kind_c32_ms2_2c_v(void)
{
	return 0xdd;
}
static inline u32 gmmu_pte_kind_c32_ms2_2c_f(void)
{
	return 0xdd0;
}
static inline u32 gmmu_pte_kind_c32_ms2_2cbr_v(void)
{
	return 0xde;
}
static inline u32 gmmu_pte_kind_c32_ms2_2cbr_f(void)
{
	return 0xde0;
}
static inline u32 gmmu_pte_kind_c32_ms2_2cra_v(void)
{
	return 0xcc;
}
static inline u32 gmmu_pte_kind_c32_ms2_2cra_f(void)
{
	return 0xcc0;
}
static inline u32 gmmu_pte_kind_c32_ms4_2c_v(void)
{
	return 0xdf;
}
static inline u32 gmmu_pte_kind_c32_ms4_2c_f(void)
{
	return 0xdf0;
}
static inline u32 gmmu_pte_kind_c32_ms4_2cbr_v(void)
{
	return 0xe0;
}
static inline u32 gmmu_pte_kind_c32_ms4_2cbr_f(void)
{
	return 0xe00;
}
static inline u32 gmmu_pte_kind_c32_ms4_2cba_v(void)
{
	return 0xe1;
}
static inline u32 gmmu_pte_kind_c32_ms4_2cba_f(void)
{
	return 0xe10;
}
static inline u32 gmmu_pte_kind_c32_ms4_2cra_v(void)
{
	return 0xe2;
}
static inline u32 gmmu_pte_kind_c32_ms4_2cra_f(void)
{
	return 0xe20;
}
static inline u32 gmmu_pte_kind_c32_ms4_2bra_v(void)
{
	return 0xe3;
}
static inline u32 gmmu_pte_kind_c32_ms4_2bra_f(void)
{
	return 0xe30;
}
static inline u32 gmmu_pte_kind_c32_ms8_ms16_2c_v(void)
{
	return 0xe4;
}
static inline u32 gmmu_pte_kind_c32_ms8_ms16_2c_f(void)
{
	return 0xe40;
}
static inline u32 gmmu_pte_kind_c32_ms8_ms16_2cra_v(void)
{
	return 0xe5;
}
static inline u32 gmmu_pte_kind_c32_ms8_ms16_2cra_f(void)
{
	return 0xe50;
}
static inline u32 gmmu_pte_kind_c64_2c_v(void)
{
	return 0xe6;
}
static inline u32 gmmu_pte_kind_c64_2c_f(void)
{
	return 0xe60;
}
static inline u32 gmmu_pte_kind_c64_2cbr_v(void)
{
	return 0xe7;
}
static inline u32 gmmu_pte_kind_c64_2cbr_f(void)
{
	return 0xe70;
}
static inline u32 gmmu_pte_kind_c64_2cba_v(void)
{
	return 0xe8;
}
static inline u32 gmmu_pte_kind_c64_2cba_f(void)
{
	return 0xe80;
}
static inline u32 gmmu_pte_kind_c64_2cra_v(void)
{
	return 0xe9;
}
static inline u32 gmmu_pte_kind_c64_2cra_f(void)
{
	return 0xe90;
}
static inline u32 gmmu_pte_kind_c64_2bra_v(void)
{
	return 0xea;
}
static inline u32 gmmu_pte_kind_c64_2bra_f(void)
{
	return 0xea0;
}
static inline u32 gmmu_pte_kind_c64_ms2_2c_v(void)
{
	return 0xeb;
}
static inline u32 gmmu_pte_kind_c64_ms2_2c_f(void)
{
	return 0xeb0;
}
static inline u32 gmmu_pte_kind_c64_ms2_2cbr_v(void)
{
	return 0xec;
}
static inline u32 gmmu_pte_kind_c64_ms2_2cbr_f(void)
{
	return 0xec0;
}
static inline u32 gmmu_pte_kind_c64_ms2_2cra_v(void)
{
	return 0xcd;
}
static inline u32 gmmu_pte_kind_c64_ms2_2cra_f(void)
{
	return 0xcd0;
}
static inline u32 gmmu_pte_kind_c64_ms4_2c_v(void)
{
	return 0xed;
}
static inline u32 gmmu_pte_kind_c64_ms4_2c_f(void)
{
	return 0xed0;
}
static inline u32 gmmu_pte_kind_c64_ms4_2cbr_v(void)
{
	return 0xee;
}
static inline u32 gmmu_pte_kind_c64_ms4_2cbr_f(void)
{
	return 0xee0;
}
static inline u32 gmmu_pte_kind_c64_ms4_2cba_v(void)
{
	return 0xef;
}
static inline u32 gmmu_pte_kind_c64_ms4_2cba_f(void)
{
	return 0xef0;
}
static inline u32 gmmu_pte_kind_c64_ms4_2cra_v(void)
{
	return 0xf0;
}
static inline u32 gmmu_pte_kind_c64_ms4_2cra_f(void)
{
	return 0xf00;
}
static inline u32 gmmu_pte_kind_c64_ms4_2bra_v(void)
{
	return 0xf1;
}
static inline u32 gmmu_pte_kind_c64_ms4_2bra_f(void)
{
	return 0xf10;
}
static inline u32 gmmu_pte_kind_c64_ms8_ms16_2c_v(void)
{
	return 0xf2;
}
static inline u32 gmmu_pte_kind_c64_ms8_ms16_2c_f(void)
{
	return 0xf20;
}
static inline u32 gmmu_pte_kind_c64_ms8_ms16_2cra_v(void)
{
	return 0xf3;
}
static inline u32 gmmu_pte_kind_c64_ms8_ms16_2cra_f(void)
{
	return 0xf30;
}
static inline u32 gmmu_pte_kind_c128_2c_v(void)
{
	return 0xf4;
}
static inline u32 gmmu_pte_kind_c128_2c_f(void)
{
	return 0xf40;
}
static inline u32 gmmu_pte_kind_c128_2cr_v(void)
{
	return 0xf5;
}
static inline u32 gmmu_pte_kind_c128_2cr_f(void)
{
	return 0xf50;
}
static inline u32 gmmu_pte_kind_c128_ms2_2c_v(void)
{
	return 0xf6;
}
static inline u32 gmmu_pte_kind_c128_ms2_2c_f(void)
{
	return 0xf60;
}
static inline u32 gmmu_pte_kind_c128_ms2_2cr_v(void)
{
	return 0xf7;
}
static inline u32 gmmu_pte_kind_c128_ms2_2cr_f(void)
{
	return 0xf70;
}
static inline u32 gmmu_pte_kind_c128_ms4_2c_v(void)
{
	return 0xf8;
}
static inline u32 gmmu_pte_kind_c128_ms4_2c_f(void)
{
	return 0xf80;
}
static inline u32 gmmu_pte_kind_c128_ms4_2cr_v(void)
{
	return 0xf9;
}
static inline u32 gmmu_pte_kind_c128_ms4_2cr_f(void)
{
	return 0xf90;
}
static inline u32 gmmu_pte_kind_c128_ms8_ms16_2c_v(void)
{
	return 0xfa;
}
static inline u32 gmmu_pte_kind_c128_ms8_ms16_2c_f(void)
{
	return 0xfa0;
}
static inline u32 gmmu_pte_kind_c128_ms8_ms16_2cr_v(void)
{
	return 0xfb;
}
static inline u32 gmmu_pte_kind_c128_ms8_ms16_2cr_f(void)
{
	return 0xfb0;
}
static inline u32 gmmu_pte_kind_x8c24_v(void)
{
	return 0xfc;
}
static inline u32 gmmu_pte_kind_x8c24_f(void)
{
	return 0xfc0;
}
static inline u32 gmmu_pte_kind_pitch_no_swizzle_v(void)
{
	return 0xfd;
}
static inline u32 gmmu_pte_kind_pitch_no_swizzle_f(void)
{
	return 0xfd0;
}
static inline u32 gmmu_pte_kind_smsked_message_v(void)
{
	return 0xca;
}
static inline u32 gmmu_pte_kind_smsked_message_f(void)
{
	return 0xca0;
}
static inline u32 gmmu_pte_kind_smhost_message_v(void)
{
	return 0xcb;
}
static inline u32 gmmu_pte_kind_smhost_message_f(void)
{
	return 0xcb0;
}

#endif /* __hw_gmmu_gk20a_h__ */
