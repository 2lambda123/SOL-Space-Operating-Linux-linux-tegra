/*
 * drivers/video/tegra/host/gk20a/hw_ltc_gk20a.h
 *
 * Copyright (c) 2012, NVIDIA Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

 /*
  * Function naming determines intended use:
  *
  *     <x>_r(void) : Returns the offset for register <x>.
  *
  *     <x>_w(void) : Returns the word offset for word (4 byte) element <x>.
  *
  *     <x>_<y>_s(void) : Returns size of field <y> of register <x> in bits.
  *
  *     <x>_<y>_f(u32 v) : Returns a value based on 'v' which has been shifted
  *         and masked to place it at field <y> of register <x>.  This value
  *         can be |'d with others to produce a full register value for
  *         register <x>.
  *
  *     <x>_<y>_m(void) : Returns a mask for field <y> of register <x>.  This
  *         value can be ~'d and then &'d to clear the value of field <y> for
  *         register <x>.
  *
  *     <x>_<y>_<z>_f(void) : Returns the constant value <z> after being shifted
  *         to place it at field <y> of register <x>.  This value can be |'d
  *         with others to produce a full register value for <x>.
  *
  *     <x>_<y>_v(u32 r) : Returns the value of field <y> from a full register
  *         <x> value 'r' after being shifted to place its LSB at bit 0.
  *         This value is suitable for direct comparison with other unshifted
  *         values appropriate for use in field <y> of register <x>.
  *
  *     <x>_<y>_<z>_v(void) : Returns the constant value for <z> defined for
  *         field <y> of register <x>.  This value is suitable for direct
  *         comparison with unshifted values appropriate for use in field <y>
  *         of register <x>.
  */

#ifndef __hw_ltc_gk20a_h__
#define __hw_ltc_gk20a_h__
/*This file is autogenerated.  Do not edit. */

static inline u32 ltc_ltc0_lts0_cbc_ctrl1_r(void)
{
	return 0x001410c8;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_s(void)
{
	return 1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_f(u32 v)
{
	return (v & 0x1) << 0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_m(void)
{
	return 0x1 << 0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_v(u32 r)
{
	return (r >> 0) & 0x1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_active_f(void)
{
	return 0x1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clean_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_s(void)
{
	return 1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_f(u32 v)
{
	return (v & 0x1) << 1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_m(void)
{
	return 0x1 << 1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_v(u32 r)
{
	return (r >> 1) & 0x1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_active_f(void)
{
	return 0x2;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_invalidate_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_s(void)
{
	return 1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_f(u32 v)
{
	return (v & 0x1) << 2;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_m(void)
{
	return 0x1 << 2;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_v(u32 r)
{
	return (r >> 2) & 0x1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_active_f(void)
{
	return 0x4;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_clear_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_s(void)
{
	return 1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_f(u32 v)
{
	return (v & 0x1) << 3;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_m(void)
{
	return 0x1 << 3;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_v(u32 r)
{
	return (r >> 3) & 0x1;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_init_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_init_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_active_f(void)
{
	return 0x8;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_enable_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_enable_f(void)
{
	return 0x8;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_disable_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltc0_lts0_cbc_ctrl1_disable_invalidate_disable_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_r(void)
{
	return 0x0017e8c8;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_f(u32 v)
{
	return (v & 0x1) << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_m(void)
{
	return 0x1 << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_v(u32 r)
{
	return (r >> 0) & 0x1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_active_f(void)
{
	return 0x1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clean_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_f(u32 v)
{
	return (v & 0x1) << 1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_m(void)
{
	return 0x1 << 1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_v(u32 r)
{
	return (r >> 1) & 0x1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_active_f(void)
{
	return 0x2;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_invalidate_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_f(u32 v)
{
	return (v & 0x1) << 2;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_m(void)
{
	return 0x1 << 2;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_v(u32 r)
{
	return (r >> 2) & 0x1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_active_f(void)
{
	return 0x4;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_clear_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_f(u32 v)
{
	return (v & 0x1) << 3;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_m(void)
{
	return 0x1 << 3;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_v(u32 r)
{
	return (r >> 3) & 0x1;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_init_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_init_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_active_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_active_f(void)
{
	return 0x8;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_inactive_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_inactive_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_enable_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_enable_f(void)
{
	return 0x8;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_disable_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl1_disable_invalidate_disable_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_r(void)
{
	return 0x0017e8cc;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_clear_lower_bound_s(void)
{
	return 17;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_clear_lower_bound_f(u32 v)
{
	return (v & 0x1ffff) << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_clear_lower_bound_m(void)
{
	return 0x1ffff << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_clear_lower_bound_v(u32 r)
{
	return (r >> 0) & 0x1ffff;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_clear_lower_bound_init_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl2_clear_lower_bound_init_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_r(void)
{
	return 0x0017e8d0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_clear_upper_bound_s(void)
{
	return 17;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_clear_upper_bound_f(u32 v)
{
	return (v & 0x1ffff) << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_clear_upper_bound_m(void)
{
	return 0x1ffff << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_clear_upper_bound_v(u32 r)
{
	return (r >> 0) & 0x1ffff;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_clear_upper_bound_init_v(void)
{
	return 0x0001ffff;
}
static inline u32 ltc_ltcs_ltss_cbc_ctrl3_clear_upper_bound_init_f(void)
{
	return 0x1ffff;
}
static inline u32 ltc_ltcs_ltss_cbc_base_r(void)
{
	return 0x0017e8d4;
}
static inline u32 ltc_ltcs_ltss_cbc_base_address_s(void)
{
	return 26;
}
static inline u32 ltc_ltcs_ltss_cbc_base_address_f(u32 v)
{
	return (v & 0x3ffffff) << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_base_address_m(void)
{
	return 0x3ffffff << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_base_address_v(u32 r)
{
	return (r >> 0) & 0x3ffffff;
}
static inline u32 ltc_ltcs_ltss_cbc_base_address_init_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_base_address_init_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_param_r(void)
{
	return 0x0017e8dc;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_s(void)
{
	return 16;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_f(u32 v)
{
	return (v & 0xffff) << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_m(void)
{
	return 0xffff << 0;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_v(u32 r)
{
	return (r >> 0) & 0xffff;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_7_v(void)
{
	return 0x00000007;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_7_f(void)
{
	return 0x7;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_14_v(void)
{
	return 0x0000000e;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_14_f(void)
{
	return 0xe;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_16_v(void)
{
	return 0x00000010;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_16_f(void)
{
	return 0x10;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_21_v(void)
{
	return 0x00000015;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_21_f(void)
{
	return 0x15;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_28_v(void)
{
	return 0x0000001c;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_28_f(void)
{
	return 0x1c;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_32_v(void)
{
	return 0x00000020;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_32_f(void)
{
	return 0x20;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_35_v(void)
{
	return 0x00000023;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_35_f(void)
{
	return 0x23;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_42_v(void)
{
	return 0x0000002a;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_42_f(void)
{
	return 0x2a;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_49_v(void)
{
	return 0x00000031;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_49_f(void)
{
	return 0x31;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_56_v(void)
{
	return 0x00000038;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_56_f(void)
{
	return 0x38;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_64_v(void)
{
	return 0x00000040;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_64_f(void)
{
	return 0x40;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_70_v(void)
{
	return 0x00000046;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_70_f(void)
{
	return 0x46;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_84_v(void)
{
	return 0x00000054;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_84_f(void)
{
	return 0x54;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_98_v(void)
{
	return 0x00000062;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_98_f(void)
{
	return 0x62;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_112_v(void)
{
	return 0x00000070;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_112_f(void)
{
	return 0x70;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_140_v(void)
{
	return 0x0000008c;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_140_f(void)
{
	return 0x8c;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_168_v(void)
{
	return 0x000000a8;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_168_f(void)
{
	return 0xa8;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_196_v(void)
{
	return 0x000000c4;
}
static inline u32 ltc_ltcs_ltss_cbc_param_comptags_per_cache_line_196_f(void)
{
	return 0xc4;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_s(void)
{
	return 8;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_f(u32 v)
{
	return (v & 0xff) << 16;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_m(void)
{
	return 0xff << 16;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_v(u32 r)
{
	return (r >> 16) & 0xff;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_16_v(void)
{
	return 0x00000010;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_16_f(void)
{
	return 0x100000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_20_v(void)
{
	return 0x00000014;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_20_f(void)
{
	return 0x140000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_32_v(void)
{
	return 0x00000020;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_32_f(void)
{
	return 0x200000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_40_v(void)
{
	return 0x00000028;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_40_f(void)
{
	return 0x280000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_64_v(void)
{
	return 0x00000040;
}
static inline u32 ltc_ltcs_ltss_cbc_param_num_cache_lines_64_f(void)
{
	return 0x400000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_s(void)
{
	return 4;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_f(u32 v)
{
	return (v & 0xf) << 24;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_m(void)
{
	return 0xf << 24;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_v(u32 r)
{
	return (r >> 24) & 0xf;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_512_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_512_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_1k_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_1k_f(void)
{
	return 0x1000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_2k_v(void)
{
	return 0x00000002;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_2k_f(void)
{
	return 0x2000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_4k_v(void)
{
	return 0x00000003;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_4k_f(void)
{
	return 0x3000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_8k_v(void)
{
	return 0x00000004;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_8k_f(void)
{
	return 0x4000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_16k_v(void)
{
	return 0x00000005;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_16k_f(void)
{
	return 0x5000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_32k_v(void)
{
	return 0x00000006;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_32k_f(void)
{
	return 0x6000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_64k_v(void)
{
	return 0x00000007;
}
static inline u32 ltc_ltcs_ltss_cbc_param_cache_line_size_64k_f(void)
{
	return 0x7000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_s(void)
{
	return 4;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_f(u32 v)
{
	return (v & 0xf) << 28;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_m(void)
{
	return 0xf << 28;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_v(u32 r)
{
	return (r >> 28) & 0xf;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_1_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_1_f(void)
{
	return 0x10000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_2_v(void)
{
	return 0x00000002;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_2_f(void)
{
	return 0x20000000;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_4_v(void)
{
	return 0x00000004;
}
static inline u32 ltc_ltcs_ltss_cbc_param_slices_per_fbp_4_f(void)
{
	return 0x40000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_r(void)
{
	return 0x0017e91c;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_rd_pinned_s(void)
{
	return 5;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_rd_pinned_f(u32 v)
{
	return (v & 0x1f) << 0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_rd_pinned_m(void)
{
	return 0x1f << 0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_rd_pinned_v(u32 r)
{
	return (r >> 0) & 0x1f;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_rd_pinned_init_v(void)
{
	return 0x0000000e;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_rd_pinned_init_f(void)
{
	return 0xe;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_sysmem_rd_pinned_s(void)
{
	return 5;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_sysmem_rd_pinned_f(u32 v)
{
	return (v & 0x1f) << 8;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_sysmem_rd_pinned_m(void)
{
	return 0x1f << 8;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_sysmem_rd_pinned_v(u32 r)
{
	return (r >> 8) & 0x1f;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_sysmem_rd_pinned_init_v(void)
{
	return 0x0000000d;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_sysmem_rd_pinned_init_f(void)
{
	return 0xd00;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_evict_last_s(void)
{
	return 5;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_evict_last_f(u32 v)
{
	return (v & 0x1f) << 16;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_evict_last_m(void)
{
	return 0x1f << 16;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_evict_last_v(u32 r)
{
	return (r >> 16) & 0x1f;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_evict_last_init_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_evict_last_init_f(void)
{
	return 0x10000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_atomic_s(void)
{
	return 5;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_atomic_f(u32 v)
{
	return (v & 0x1f) << 24;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_atomic_m(void)
{
	return 0x1f << 24;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_atomic_v(u32 r)
{
	return (r >> 24) & 0x1f;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_atomic_init_v(void)
{
	return 0x0000000d;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_max_ways_atomic_init_f(void)
{
	return 0xd000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_r(void)
{
	return 0x0017e924;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_s(void)
{
	return 8;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_f(u32 v)
{
	return (v & 0xff) << 0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_m(void)
{
	return 0xff << 0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_v(u32 r)
{
	return (r >> 0) & 0xff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_init_v(void)
{
	return 0x000000ff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_init_f(void)
{
	return 0xff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_one_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_one_f(void)
{
	return 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_max_v(void)
{
	return 0x000000ff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_rd_miss_max_f(void)
{
	return 0xff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_s(void)
{
	return 8;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_f(u32 v)
{
	return (v & 0xff) << 8;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_m(void)
{
	return 0xff << 8;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_v(u32 r)
{
	return (r >> 8) & 0xff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_init_v(void)
{
	return 0x0000000e;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_init_f(void)
{
	return 0xe00;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_one_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_one_f(void)
{
	return 0x100;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_max_v(void)
{
	return 0x000000ff;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_sysmem_wr_miss_max_f(void)
{
	return 0xff00;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_f(u32 v)
{
	return (v & 0x1) << 24;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_m(void)
{
	return 0x1 << 24;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_v(u32 r)
{
	return (r >> 24) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_true_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_true_f(void)
{
	return 0x1000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_false_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_write_false_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_f(u32 v)
{
	return (v & 0x1) << 25;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_m(void)
{
	return 0x1 << 25;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_v(u32 r)
{
	return (r >> 25) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_true_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_true_f(void)
{
	return 0x2000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_false_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_update_lru_on_prefetch_false_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_f(u32 v)
{
	return (v & 0x1) << 26;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_m(void)
{
	return 0x1 << 26;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_v(u32 r)
{
	return (r >> 26) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_init_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_init_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_disabled_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_disabled_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_enabled_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_only_allow_writes_to_clean_enabled_f(void)
{
	return 0x4000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_f(u32 v)
{
	return (v & 0x1) << 27;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_m(void)
{
	return 0x1 << 27;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_v(u32 r)
{
	return (r >> 27) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_init_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_init_f(void)
{
	return 0x8000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_disabled_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_disabled_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_enabled_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_issue_dirty_on_evict_last_enabled_f(void)
{
	return 0x8000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_f(u32 v)
{
	return (v & 0x1) << 28;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_m(void)
{
	return 0x1 << 28;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_v(u32 r)
{
	return (r >> 28) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_init_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_init_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_disabled_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_disabled_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_enabled_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_bypass_mode_enabled_f(void)
{
	return 0x10000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_f(u32 v)
{
	return (v & 0x1) << 29;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_m(void)
{
	return 0x1 << 29;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_v(u32 r)
{
	return (r >> 29) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_init_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_init_f(void)
{
	return 0x20000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_enable_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_enable_f(void)
{
	return 0x20000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_disable_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_padr_hit_disable_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_f(u32 v)
{
	return (v & 0x1) << 30;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_m(void)
{
	return 0x1 << 30;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_v(u32 r)
{
	return (r >> 30) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_init_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_init_f(void)
{
	return 0x40000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_enable_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_enable_f(void)
{
	return 0x40000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_disable_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_l2_fasttrack_across_vc_disable_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_s(void)
{
	return 1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_f(u32 v)
{
	return (v & 0x1) << 31;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_m(void)
{
	return 0x1 << 31;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_v(u32 r)
{
	return (r >> 31) & 0x1;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_init_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_init_f(void)
{
	return 0x80000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_enabled_v(void)
{
	return 0x00000001;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_enabled_f(void)
{
	return 0x80000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_disabled_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_tstg_set_mgmt_2_max_gpc_include_rop_disabled_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_r(void)
{
	return 0x0017ea44;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_address_s(void)
{
	return 4;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_address_f(u32 v)
{
	return (v & 0xf) << 0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_address_m(void)
{
	return 0xf << 0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_address_v(u32 r)
{
	return (r >> 0) & 0xf;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_address_reserved_v(void)
{
	return 0x00000000;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_index_address_reserved_f(void)
{
	return 0x0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_color_clear_value_r(u32 i)
{
	return 0x0017ea48+((i)*4);
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_color_clear_value__size_1_v(void)
{
	return 4;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_color_clear_value_field_s(void)
{
	return 32;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_color_clear_value_field_f(u32 v)
{
	return (v & 0xffffffff) << 0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_color_clear_value_field_m(void)
{
	return 0xffffffff << 0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_color_clear_value_field_v(u32 r)
{
	return (r >> 0) & 0xffffffff;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_depth_clear_value_r(void)
{
	return 0x0017ea58;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_depth_clear_value_field_s(void)
{
	return 32;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_depth_clear_value_field_f(u32 v)
{
	return (v & 0xffffffff) << 0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_depth_clear_value_field_m(void)
{
	return 0xffffffff << 0;
}
static inline u32 ltc_ltcs_ltss_dstg_zbc_depth_clear_value_field_v(u32 r)
{
	return (r >> 0) & 0xffffffff;
}
static inline u32 ltc_ltc0_lts0_cbc_base_alignment_shift_v(void)
{
	return 0x0000000b;
}

#endif /* __hw_ltc_gk20a_h__ */
